abstract \u001b[31m
assert \u001b[32m
boolean \u001b[33m
break \u001b[34m
byte \u001b[35m
case \u001b[36m
catch \u001b[37m
char \u001b[31m
class \u001b[32m
const \u001b[33m
continue \u001b[34m
default \u001b[35m
do \u001b[36m
double \u001b[37m
else \u001b[31m
enum \u001b[32m
extends \u001b[33m
final \u001b[34m
finally \u001b[35m
float \u001b[36m
for \u001b[37m
goto \u001b[31m
if \u001b[32m
implements \u001b[33m
import \u001b[34m
instanceof \u001b[35m
int \u001b[36m
interface \u001b[37m
long \u001b[31m
native \u001b[32m
new \u001b[33m
null \u001b[34m
package \u001b[35m
private \u001b[36m
protected \u001b[37m
public \u001b[31m
return \u001b[32m
short \u001b[33m
static \u001b[34m
strictfp \u001b[35m
super \u001b[36m
switch \u001b[37m
synchronized \u001b[31m
this \u001b[32m
throw \u001b[33m
throws \u001b[34m
transient \u001b[35m
try \u001b[36m
void \u001b[37m
volatile \u001b[31m
while \u001b[32m
true \u001b[33m
false \u001b[34m


