abstract \u001b[34m
assert \u001b[37m
boolean \u001b[35m
break \u001b[31m
byte \u001b[35m
case \u001b[34m
catch \u001b[34m
char \u001b[35m
class \u001b[34m
const \u001b[35m
continue \u001b[31m
default \u001b[34m
do \u001b[34m
double \u001b[35m
else \u001b[34m
enum \u001b[34m
extends \u001b[34m
final \u001b[34m
finally \u001b[34m
float \u001b[35m
for \u001b[34m
goto \u001b[37m
if \u001b[34m
implements \u001b[34m
import \u001b[34m
instanceof \u001b[34m
int \u001b[35m
interface \u001b[34m
long \u001b[35m
native \u001b[35m
new \u001b[36m
null \u001b[36m
package \u001b[34m
private \u001b[34m
protected \u001b[34m
public \u001b[34m
return \u001b[32m
short \u001b[35m
static \u001b[34m
strictfp \u001b[34m
super \u001b[34m
switch \u001b[34m
synchronized \u001b[34m
this \u001b[35m
throw \u001b[34m
throws \u001b[34m
transient \u001b[35m
try \u001b[34m
void \u001b[34m
volatile \u001b[34m
while \u001b[34m
true \u001b[36m
false \u001b[36m


